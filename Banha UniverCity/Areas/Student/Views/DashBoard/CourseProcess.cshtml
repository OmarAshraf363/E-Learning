@model BFCAI.Models.ViewModels.CurriculumViewModel
<style>
    body {
        background-color: #f9f9f9;
        margin: 0;
        padding: 0;
        font-family: 'Poppins', sans-serif;
    }

    header {
        display: none;
    }

    

   

  
</style>

<div class="new-head container-fluid">
    <div class="container head">
        <h1>
            <i onclick="getback()" style="cursor:pointer; background-color:transparent;" class="fa-solid fa-chevron-left "></i> @Model.Course.CourseName <span class="ms-1 text-warning"> Process</span>
        </h1>
    </div>
</div>

<section class="main-container container-fluid">
    <!-- Curriculum -->
    <div class="curriculum">
        <h5>Course Materials</h5>
        @foreach (var item in Model.CourseCurricula)
        {
            <div onclick="getContent(@item.CourseCurriculumID,'processes')" class="part">
                @item.Title
            </div>
        }
    </div>

    <!-- Processes -->
    <div id="processes" class="processes">
        <h4>Selected Content Will Appear Here</h4>
    </div>

    <!-- Feedback -->
    <div class="feedback">
        <h5>Course Feedback</h5>

        @if (Model.Feedbacks.Any())
        {
            @foreach (var feedback in Model.Feedbacks)
            {
                <div class="card feedback-card mb-3">
                    <div class="d-flex align-items-start">
                        <img src="@feedback.ProviderUser?.Picture" alt="User" class="user-img me-3" />
                        <div>
                            <div class="d-flex justify-content-between align-items-center">
                                <h6 class="mb-1">@feedback.ProviderUser?.FullName</h6>
                                <small class="text-muted">@feedback.FeedbackDate.ToString("dd MMM yyyy")</small>
                            </div>

                            <div class="rating mb-1">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <span class="fa fa-star @(i <= feedback.Rating ? "text-warning" : "text-secondary")"></span>
                                }
                            </div>

                            <p class="feedback-text">@feedback.Content</p>
                        </div>
                    </div>
                </div>
            }
            <button onclick="UpsertFeedBack(null,@Model.Course.CourseID)" class="btn btn-dark">Create New Feedback</button>
        }
        else
        {
            <div class="alert alert-light border text-muted">No feedback available.</div>
        }
    </div>

</section>


<div class="modal fade " id="addModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
        </div>
    </div>
</div>
